## Autogenerated by Scribe. DO NOT MODIFY.

name: Content
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: content/blog-posts
    metadata:
      groupName: Content
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Blog posts'
      description: 'This endpoint list all blog post'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      title:
        name: title
        description: ''
        required: false
        example: learnhub
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: published
        type: string
        enumValues:
          - draft
          - archived
          - published
          - in_review
        exampleWasSpecified: false
        custom: []
      tags:
        name: tags
        description: ''
        required: false
        example:
          - php
          - javascript
          - mysql
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      author:
        name: author
        description: ''
        required: false
        example: john
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: title
        type: string
        enumValues:
          - id
          - title
          - publish_date
          - created_at
        exampleWasSpecified: false
        custom: []
      per_page:
        name: per_page
        description: ''
        required: false
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      title: learnhub
      status: published
      tags:
        - php
        - javascript
        - mysql
      author: john
      sort: title
      per_page: 3
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 615ef3P4c6kva8abVZdDhgE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: content/blog-posts
    metadata:
      groupName: Content
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Blog posts'
      description: 'This endpoint will create a single blog post'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Accept: application/json
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: 'Example Blog Post Title '
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      excerpt:
        name: excerpt
        description: ''
        required: true
        example: 'This is test blogpost example'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      content:
        name: content
        description: ''
        required: true
        example: 'Lorem ipsum dolor sit amet, consectetur adipiscing ...'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      tags:
        name: tags
        description: ''
        required: true
        example: '[1,2,3]'
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: 'Example Blog Post Title '
      excerpt: 'This is test blogpost example'
      content: 'Lorem ipsum dolor sit amet, consectetur adipiscing ...'
      tags: '[1,2,3]'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dec86aVPk4651bhEDZ3gfva'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'content/blog-posts/{id}'
    metadata:
      groupName: Content
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Blog post'
      description: 'This endpoint returns a single blog post'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the blog post.'
        required: true
        example: sunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: sunt
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dgaD5k68V4Pa1ZEvchfb63e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'content/blog-posts/{id}'
    metadata:
      groupName: Content
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Blog post'
      description: 'This endpoint will update a single blog post'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Accept: application/json
      Content-Type: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the blog post.'
        required: true
        example: hic
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: hic
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: false
        example: 'Example Blog Post Title '
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      excerpt:
        name: excerpt
        description: ''
        required: false
        example: 'This is test blogpost example'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      slug:
        name: slug
        description: ''
        required: false
        example: 'example-blog-post-title '
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      content:
        name: content
        description: ''
        required: false
        example: 'Lorem ipsum dolor sit amet, consectetur adipiscing ...'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      tags:
        name: tags
        description: ''
        required: false
        example: '[1,2,3]'
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: 'Example Blog Post Title '
      excerpt: 'This is test blogpost example'
      slug: 'example-blog-post-title '
      content: 'Lorem ipsum dolor sit amet, consectetur adipiscing ...'
      tags: '[1,2,3]'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer DeE4b365gad1V6ahfc8vZPk'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'content/blog-posts/{id}'
    metadata:
      groupName: Content
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Blog posts'
      description: 'This endpoint deletes blog post'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the blog post.'
        required: true
        example: placeat
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: placeat
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aP3kgVEZevD6418fdcha56b'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: content/blog-post-tags
    metadata:
      groupName: Content
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List Blog post tag'
      description: |-
        List Blog Post Tags or you can use search query for searching by the name
            or sort direction based on whether the key starts with - 
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      sort:
        name: sort
        description: ''
        required: false
        example: 'name, -name'
        type: string
        enumValues:
          - name
        exampleWasSpecified: false
        custom: []
      search:
        name: search
        description: ''
        required: false
        example: name
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      per_page:
        name: per_page
        description: ''
        required: false
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      sort: 'name, -name'
      search: name
      per_page: 14
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer caVkevab16Z63fEhDd85gP4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: content/blog-post-tags
    metadata:
      groupName: Content
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Blog post tag'
      description: 'This endpoint will create a single blog post tag'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Accept: application/json
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: test
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: test
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer agvebdV3kc6h5814PEfaDZ6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'content/blog-post-tags/{id}'
    metadata:
      groupName: Content
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Blog post tag'
      description: 'This endpoint will update a single blog post tag'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Accept: application/json
      Content-Type: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the blog post tag.'
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: sit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: test
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: test
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Zvh66aEg8de1Db3PkaV54fc'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'content/blog-post-tags/{id}'
    metadata:
      groupName: Content
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Blog post tag'
      description: 'This endpoint deletes blog post tag'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the blog post tag.'
        required: true
        example: doloremque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: doloremque
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ga1Z4bacekVE8fPDh365vd6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'content/blog-posts/{id}/statuses'
    metadata:
      groupName: Content
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Publish/Unpublish Blog posts'
      description: 'This endpoint publish or unpublish blog post'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Accept: application/json
      Content-Type: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the blog post.'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      publish_date:
        name: publish_date
        description: ''
        required: false
        example: '2024-01-01'
        type: date
        enumValues: []
        exampleWasSpecified: false
        custom: []
      status:
        name: status
        description: ''
        required: true
        example: 'draft, published, in_review, archive'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      publish_date: '2024-01-01'
      status: 'draft, published, in_review, archive'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 154cehZEf6Dd3b6gakV8Pav'
    controller: null
    method: null
    route: null
    custom: []
