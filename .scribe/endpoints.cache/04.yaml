## Autogenerated by Scribe. DO NOT MODIFY.

name: Website
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: blog-posts
    metadata:
      groupName: Website
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Blog posts'
      description: 'This endpoint list all blog post from newest ones to the oldest.Additionally you may use ?title= query param to filter by title'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      title:
        name: title
        description: ''
        required: false
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      title: qui
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'blog-posts/{slug}'
    metadata:
      groupName: Website
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Blog Post'
      description: 'This endpoint retrieves blog post by a slug.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the blog post.'
        required: true
        example: temporibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: temporibus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: blog-post-tags
    metadata:
      groupName: Website
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Blog Post Tags'
      description: 'This endpoint list all blog post tags in alphabetically order paginated by 20.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'blog-post-tags/{tag}'
    metadata:
      groupName: Website
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Blog Post By Tag'
      description: 'This endpoint retrieves blog posts by a specific tag.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tag:
        name: tag
        description: ''
        required: true
        example: praesentium
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      tag: praesentium
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: contact
    metadata:
      groupName: Website
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Contact
      description: 'This endpoint is used for submitting contact form data.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the visitor.'
        required: true
        example: cumque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'The email address of the visitor.'
        required: true
        example: clockman@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      message:
        name: message
        description: 'The body of the message.'
        required: true
        example: aperiam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      cf-turnstile-response:
        name: cf-turnstile-response
        description: 'Cloudflare Turnstile ReCaptcha token'
        required: true
        example: non
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: cumque
      email: clockman@example.org
      message: aperiam
      cf-turnstile-response: non
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: newsletter-subscribers
    metadata:
      groupName: Website
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Subscribe To Newsletter'
      description: ' This endpoint is for subscribing to the Leanhub.mk newsletter.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'Must not be greater than 50 characters.'
        required: true
        example: qyrqxvcxepypmf
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: king.gudrun@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      cf-turnstile-response:
        name: cf-turnstile-response
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      first_name: qyrqxvcxepypmf
      email: king.gudrun@example.com
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
