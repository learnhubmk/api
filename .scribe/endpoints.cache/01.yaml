## Autogenerated by Scribe. DO NOT MODIFY.

name: Authentication
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: admin/user
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Admin User'
      description: 'This endpoint enables to list admin information after login'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
          x-treblle-trace-id: 9510fff5-a192-453b-8ca6-5e29f16c8d76
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer b8daDcPZva435k166EgVfeh'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: admin/login
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Admin Login'
      description: 'This endpoint enables users with admin role to sign in'
      authenticated: false
      custom: []
    headers:
      Accept: application/json
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: ''
        required: true
        example: prippin@example.com
        type: password
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: ullam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: prippin@example.com
      password: ullam
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: admin/logout
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Admin Logout'
      description: 'This endpoint enables users with admin role to log out'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6feag3VvZb8cPaE4hD165dk'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: admin/refresh
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Admin Refresh Token'
      description: 'This endpoint will delete old and create new token'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer h6461eDk5EZPfbava3cg8Vd'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: content/user
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Content Manager User'
      description: 'This endpoint enables to list content manager information after login'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
          x-treblle-trace-id: bef8d0ba-f586-4885-a1a6-4eb27a799a79
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer V65h1dfP6vDbakE3c8g4aZe'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: content/login
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Content Manager Login'
      description: 'This endpoint enables users with content role to sign in'
      authenticated: false
      custom: []
    headers:
      Accept: application/json
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: ''
        required: true
        example: lamar16@example.net
        type: password
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: aperiam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: lamar16@example.net
      password: aperiam
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: content/logout
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Content Manager Logout'
      description: 'This endpoint enables users with content role to log out'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dafc6E4hk1Dea6b3PvVg8Z5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: content/refresh
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Content Manager Refresh Token'
      description: 'This endpoint will delete old and create new token'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ecavf1VkE3a6bh4gPd6ZD85'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: user
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Member User'
      description: 'This endpoint enables member information after login'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
          x-treblle-trace-id: ae00b8b4-d66e-4518-8bec-ed14a34d8db9
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Dfcvk8P56VZ64g1ehd3Eaab'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: login
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Member Login'
      description: 'This endpoint enables users with member role to sign in'
      authenticated: false
      custom: []
    headers:
      Accept: application/json
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: ''
        required: true
        example: walter.simone@example.org
        type: password
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: debitis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: walter.simone@example.org
      password: debitis
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: logout
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Memeber Logout'
      description: 'This endpoint enables users with Member role to log out'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer e61V5avkf3P68gbDdhZacE4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: refresh
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Member Refresh Token'
      description: 'This endpoint will delete old and create new token'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer EafZ584c6hkabgPD1ve63Vd'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'login/{provider}/redirect'
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Socialite Login Redirect'
      description: 'This endpoint redirect to the Social SignIn Form'
      authenticated: false
      custom: []
    headers:
      Accept: application/json
    urlParameters:
      provider:
        name: provider
        description: ''
        required: true
        example: google
        type: string
        enumValues:
          - github
          - google
          - linkedin
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      provider: google
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"redirect_link":"https:\/\/accounts.google.com\/o\/oauth2\/auth?client_id=471373775047-a78du2vd27cjv5bt1r9ua5mrpii8kloh.apps.googleusercontent.com&redirect_uri=http%3A%2F%2Fstaging-api.learnhub.mk%2Flogin%2Fgoogle%2Fredirect&scope=openid+profile+email&response_type=code"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
          x-treblle-trace-id: 6d014b14-287f-46b9-84dd-5000c1c9b1c2
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'login/{provider}/callback'
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Socialite Login Callback'
      description: 'This endpoint sign in the users with Google, Github or LinkedIn Account'
      authenticated: false
      custom: []
    headers:
      Accept: application/json
    urlParameters:
      provider:
        name: provider
        description: ''
        required: true
        example: google
        type: string
        enumValues:
          - github
          - google
          - linkedin
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      provider: google
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"error":"Client error: `POST https:\/\/oauth2.googleapis.com\/token` resulted in a `400 Bad Request` response:\n{\n  \"error\": \"invalid_request\",\n  \"error_description\": \"Missing required parameter: code\"\n}\n"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
          x-treblle-trace-id: b0bdab31-88e6-4010-9abf-4bd4e026e9bd
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: passwords/request-new
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Password Reset Link'
      description: 'This endpoint enables to send reset link for forgotten password'
      authenticated: false
      custom: []
    headers:
      Accept: application/json
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: ''
        required: true
        example: breanna93@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: breanna93@example.com
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: passwords/reset
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'New password'
      description: 'This endpoint enables to set new password.[IMPORTANT] Please add the password_confirmation also!!'
      authenticated: false
      custom: []
    headers:
      Accept: application/json
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      token:
        name: token
        description: ''
        required: true
        example: cumque
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: token
        required: true
        example: shanon.rath@example.net
        type: password
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Полето value мора да има минимум 8 карактери.'
        required: true
        example: '74=|_t*S52OKQU$L>L'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      token: cumque
      email: shanon.rath@example.net
      password: '74=|_t*S52OKQU$L>L'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
